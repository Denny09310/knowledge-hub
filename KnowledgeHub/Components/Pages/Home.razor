@page "/"
@attribute [StreamRendering]

@inject ArticlesManager ArticlesManager

 <!-- Toolbar -->
<div class="bg-white gap-2 flex flex-wrap items-center justify-between dark:bg-gray-800">
    <!-- Search Bar -->
    <form class="mx-auto max-w-md flex-grow">   
        <label for="default-search" class="mb-2 text-gray-900 sr-only text-sm font-medium dark:text-white">Search</label>
        <div class="relative">
            <div class="inset-y-0 start-0 ps-3 pointer-events-none absolute flex items-center">
                <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                </svg>
            </div>
            <input type="search" id="default-search" class="p-4 ps-10 text-gray-900 border-gray-300 bg-gray-50 block w-full rounded-lg border text-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search Mockups, Logos..." required />
        </div>
    </form>

    <!-- More Options -->
    <button type="button" class="text-blue-900 border-blue-800 px-3 py-2 aspect-square rounded-lg border text-center text-sm font-medium hover:text-white hover:bg-blue-900 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:border-blue-600 dark:text-blue-400 dark:hover:text-white dark:hover:bg-blue-600 dark:focus:ring-blue-800">
        <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
          <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 6h.01M12 12h.01M12 18h.01"/>
        </svg>
        <span class="sr-only">More Options</span>
    </button>
</div>

<!-- Content Section -->
<div class="p-4">
    @if (isLoading)
    {
        <PageLoader />
    }
    else if (articles == null || !articles.Any())
    {
        <DangerAlert Message="No articles found yet." />
    }
    else
    {
        <div class="gap-4 flex flex-col sm:flex-row">
            @foreach (var article in articles)
            {
                <a href="Articles/@article.Id" class="article-card">
                    <h3 class="text-lg font-bold">@article.Title</h3>
                    <p class="text-gray-600 text-sm dark:text-gray-400">@article.Author</p>
                    <span class="text-xs">@article.CreatedAt.ToString("MMM dd, yyyy")</span>
                    <span class="bg-blue-500 text-white px-2 py-1 rounded text-xs">@article.TotalReactions</span>
                </a>
            }
        </div>
    }
</div>

@code 
{
    private List<Article>? articles;
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            isLoading = true;
            var result = await ArticlesManager.GetArticlesAsync();
            articles = result.Items;
        }
        finally
        {
            isLoading = false;
        }
    }
}
